# Generated by Django 5.2.4 on 2025-08-06 18:51

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Farmer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "farmer_name",
                    models.CharField(help_text="All names", max_length=100),
                ),
                (
                    "farmer_gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=1
                    ),
                ),
                (
                    "nin",
                    models.CharField(
                        help_text="National Identification Number",
                        max_length=14,
                        unique=True,
                    ),
                ),
                ("recommender_name", models.CharField(max_length=100)),
                ("recommender_nin", models.CharField(max_length=20)),
                ("phone_number", models.CharField(max_length=20)),
                (
                    "farmer_age",
                    models.IntegerField(
                        help_text="Age between 18 and 30",
                        validators=[
                            django.core.validators.MinValueValidator(18),
                            django.core.validators.MaxValueValidator(30),
                        ],
                    ),
                ),
                (
                    "type_of_farmer",
                    models.CharField(
                        choices=[("starter", "Starter"), ("returning", "Returning")],
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Feedstock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_of_feeds", models.CharField(max_length=100)),
                (
                    "quantity_of_feeds",
                    models.IntegerField(
                        help_text="Number of bags",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("unit_cost", models.DecimalField(decimal_places=2, max_digits=10)),
                ("type_of_feeds", models.CharField(max_length=50)),
                ("brand_of_feeds", models.CharField(max_length=50)),
                ("date", models.DateTimeField(auto_now_add=True)),
                ("supplier_name", models.CharField(max_length=100)),
                ("supplier_contact", models.CharField(max_length=20)),
                (
                    "selling_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Minimum price of a bag of feeds",
                        max_digits=10,
                    ),
                ),
                ("buying_price", models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "stock_name",
                    models.CharField(
                        help_text="Mixture of characters & numbers", max_length=100
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                (
                    "chick_type",
                    models.CharField(
                        choices=[("Broilers", "Broilers"), ("Layers", "Layers")],
                        max_length=10,
                    ),
                ),
                (
                    "chick_breed",
                    models.CharField(
                        choices=[("local", "Local"), ("exotic", "Exotic")],
                        max_length=10,
                    ),
                ),
                (
                    "price",
                    models.IntegerField(
                        default=1650,
                        help_text="Price in UGX",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "manager_name",
                    models.CharField(
                        help_text="Name of the manager who registered the stock",
                        max_length=100,
                    ),
                ),
                (
                    "chicks_period",
                    models.IntegerField(
                        help_text="Age in days",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("is_salesagent", models.BooleanField(default=False)),
                ("is_manager", models.BooleanField(default=False)),
                ("phone", models.CharField(max_length=15)),
                ("title", models.CharField(max_length=10)),
                ("username", models.CharField(max_length=50, unique=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "home_users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ChickRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "chicks_type",
                    models.CharField(
                        choices=[("Broilers", "Broilers"), ("Layers", "Layers")],
                        max_length=10,
                    ),
                ),
                (
                    "chicks_breed",
                    models.CharField(
                        choices=[("local", "Local"), ("exotic", "Exotic")],
                        max_length=10,
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        help_text="Quantity of chicks",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("date_time", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                (
                    "feeds_needed",
                    models.CharField(
                        choices=[("Y", "Yes"), ("N", "No")],
                        help_text="Took the feeds",
                        max_length=1,
                    ),
                ),
                (
                    "chicks_period",
                    models.IntegerField(
                        help_text="Age in days",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "delivered",
                    models.CharField(
                        choices=[("Y", "Yes"), ("N", "No")], default="N", max_length=1
                    ),
                ),
                (
                    "farmer_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="home.farmer"
                    ),
                ),
            ],
        ),
    ]
